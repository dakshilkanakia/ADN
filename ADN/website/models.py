from django.db import models
from django.contrib.postgres.search import SearchVector
from django.db.models import Q 

# Create your models here.

class Apparel(models.Model):
    id = models.AutoField(primary_key=True)
    category = models.TextField()
    subcategory = models.TextField()
    object_date = models.CharField(max_length=10)
    date_from_name = models.TextField()
    date_from_description = models.TextField()
    new_period = models.TextField()
    compare = models.TextField()
    designer = models.TextField()
    label = models.TextField()
    url_id = models.TextField()
    brand = models.TextField()
    in_the_style_of = models.TextField()
    place_of_origin = models.TextField()
    period = models.TextField()
    condition_1 = models.TextField()
    condition_details = models.TextField()
    wear = models.TextField()
    marked_size = models.TextField()
    seller_location = models.TextField()
    reference_number = models.TextField()
    color_subcategory = models.TextField()
    basic_color = models.TextField()
    hexcodes = models.TextField()
    condition = models.TextField()
    material = models.TextField()
    description = models.TextField()
    image_url = models.TextField()
    price_currency = models.TextField()
    price = models.DecimalField(max_digits=10, decimal_places=2)
    item_condition = models.TextField()
    seller_name = models.TextField()
    production_date = models.TextField()
    category_1 = models.TextField()
    seller_type = models.TextField()
    seller_street_address = models.TextField()
    seller_address_locality = models.TextField()
    seller_postal_code = models.TextField()
    sale_location = models.TextField()
    object_url = models.TextField()
    currency = models.TextField()
    seller_rating = models.DecimalField(max_digits=10, decimal_places=2)
    dealer_since = models.TextField()
    response_time = models.TextField()
    return_policy = models.TextField()
    ship_quote = models.TextField()
    material_notes = models.TextField()
    dimensions = models.TextField()
    bust = models.TextField()
    waist = models.TextField()
    hip = models.TextField()
    length = models.TextField()
    seller_reference_number = models.TextField()
    brand_type = models.TextField()
    brand_name = models.TextField()
    seller_address_region = models.TextField()
    shoulder_to_hem = models.TextField()
    inseam = models.TextField()
    attributed_to = models.TextField()
    diameter = models.TextField()
    crawl_id = models.TextField()
    style = models.TextField()
    seller_service_id = models.TextField()
    seller_order_quantity = models.IntegerField()
    seller_url_id = models.TextField()
    is_unavailable = models.BooleanField()
    is_sold = models.BooleanField()
    seller = models.TextField()
    start_price = models.DecimalField(max_digits=10, decimal_places=2)
    final_price = models.DecimalField(max_digits=10, decimal_places=2)
    min_price = models.DecimalField(max_digits=10, decimal_places=2)
    max_price = models.DecimalField(max_digits=10, decimal_places=2)
    first_date = models.TextField()
    last_date = models.TextField()
    secondary_sale_date = models.TextField()
    month = models.TextField()
    day = models.TextField()
    sale_date = models.IntegerField()
    city = models.TextField()
    auction_no = models.TextField()
    title = models.TextField()
    total_revenue_gbp = models.DecimalField(max_digits=10, decimal_places=2)
    total_revenue_usd = models.DecimalField(max_digits=10, decimal_places=2)
    total_revenue_eur = models.DecimalField(max_digits=10, decimal_places=2)
    lots = models.IntegerField()
    included_y_n = models.TextField()
    auction_url = models.TextField()
    contents = models.TextField()
    lot = models.TextField()
    gender = models.TextField()
    date_old = models.TextField()
    gbp_low_estimate = models.DecimalField(max_digits=10, decimal_places=2)
    gbp_high_estimate = models.DecimalField(max_digits=10, decimal_places=2)
    gbp_hammer = models.DecimalField(max_digits=10, decimal_places=2)
    usd_low_estimate = models.DecimalField(max_digits=10, decimal_places=2)
    usd_high_estimate = models.DecimalField(max_digits=10, decimal_places=2)
    notes = models.TextField()
    provenance = models.TextField()
    exhibition = models.TextField()

    def __str__(self):
        return (f"{self.id} {self.title}")
